<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:camel="http://camel.apache.org/schema/blueprint"
  xsi:schemaLocation="
 http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
 http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

  <!-- Define TLS configuration for data provider -->
  <camel:sslContextParameters id="clientSslContext">
    <camel:keyManagers keyPassword="password">
      <camel:keyStore resource="etc/client-keystore.jks" password="password"/>
    </camel:keyManagers>
    <camel:trustManagers>
      <camel:keyStore resource="etc/connectors-truststore.jks" password="password"/>
    </camel:trustManagers>
  </camel:sslContextParameters>

  <!-- Routes -->
  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
    <route id="sendReq">      
      <from uri="paho:mqtt/testQueue?brokerUrl=tcp://mqtt-broker:1883"/>
      <convertBodyTo type="java.lang.String"/>
      <log message="Got message ${body}"/>
      <to
        uri="idsclient://server-core:9292/?sslContextParameters=#clientSslContext&amp;attestation=0"/>
    </route>
  </camelContext>
</blueprint>
